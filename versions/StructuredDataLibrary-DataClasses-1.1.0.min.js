window.InputType={Text:"text",Number:"number",Image:"image",Value:"value",Url:"url"};class DataSelector{constructor(t,e,l,a,n="",s=!1){this.name=t,this.selector=e,this.inputType=l,this.mandatory=a,this.attribute=n,this.isCollection=s}getData(t){if(!this.isCollection){const e=""===this.selector&&this.attribute.length>0?t:t.querySelector(this.selector);return this.privateGetDataFromItem(e)}const e=t.querySelectorAll(this.selector);let l=[];return e.forEach((t=>{const e=this.privateGetDataFromItem(t);null!==e&&l.push(e)})),l.length>0?l:(console.log(`The data selector '${this.name}', using selector '${this.selector}', had no results for the collection.`),null)}privateGetDataFromItem(t){if(null==t)return console.log(`The data selector '${this.name}', using selector '${this.selector}', had no item to retrieve data from.`),null;if(this.inputType===InputType.Image)return t.src;if(this.inputType===InputType.Value)return t.value;if(this.inputType===InputType.Url)return t.href;let e=this.selector.indexOf("[itemprop=")>=0?t.content:""===this.attribute?t.innerHTML:t.dataset[this.attribute];if(this.inputType===InputType.Text)return e;if(this.inputType===InputType.Number){e=e.replace(",-","").replace(",",".");let t=e.match(/\d+\.\d+/);return null!=t?1===t.length?t[0]:(console.log(`The data selector '${this.name}', using selector '${this.selector}', had multiple decimal values converted to a number.`),null):(t=e.match(/\d+/),null!=t?1===t.length?t[0]:(console.log(`The data selector '${this.name}', using selector '${this.selector}', had multiple values converted to a number.`),null):(console.log(`The data selector '${this.name}', using selector '${this.selector}', had no value converted to a number.`),null))}}}class FixedDataSelector extends DataSelector{constructor(t,e){super(t,"","",!0),this.fixedValue=e}getData(t){return this.fixedValue}}class DataSchema{constructor(t,e,l,a=null,n=null,s=!1){this.name=t,this.itemContainerSelector=e,this.mandatory=l,this.dataSelectors=a,this.dataSchemas=n,this.isCollection=s}getData(t){if(!this.isCollection){const e=""===this.itemContainerSelector?t:t.querySelector(this.itemContainerSelector);return null==e?(console.log(`The data schema '${this.name}', using selector '${this.itemContainerSelector}', did not find an element.`),null):this._getDataFromItemContainer(e)}const e=t.querySelectorAll(this.itemContainerSelector);let l=[];return e.forEach((t=>{const e=this._getDataFromItemContainer(t);null!==e&&l.push(e)})),l.length>0?l:(console.log(`The data schema '${this.name}', using selector '${this.itemContainerSelector}', had no results for the collection.`),null)}_getDataFromItemContainer(t){let e={},l=!1;return null!==this.dataSelectors&&this.dataSelectors.forEach((a=>{const n=a.getData(t);null!==n?e[a.name]=n:a.mandatory&&(l=!0)})),l?(console.log(`The data schema '${this.name}', using selector '${this.itemContainerSelector}', missed mandatory data.`),null):(null!==this.dataSchemas&&this.dataSchemas.forEach((a=>{const n=a.getData(t);null!==n?e[a.name]=n:a.mandatory&&(l=!0)})),l?(console.log(`The data schema '${this.name}', using selector '${this.itemContainerSelector}', missed mandatory schema.`),null):e)}}