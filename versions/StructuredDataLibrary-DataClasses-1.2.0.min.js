window.InputType={Text:"text",Number:"number",Image:"image",Value:"value",Url:"url"};class DataSelector{constructor(e,t,l,a,n="",s=!1){this.name=e,this.selector=t,this.inputType=l,this.mandatory=a,this.attribute=n,this.isCollection=s}getData(e){if(!this.isCollection){const t=""===this.selector&&this.attribute.length>0?e:e.querySelector(this.selector);return this.privateGetDataFromItem(t)}const t=e.querySelectorAll(this.selector);let l=[];return t.forEach((e=>{const t=this.privateGetDataFromItem(e);null!==t&&l.push(t)})),l.length>0?l:(console.log(`The data selector '${this.name}', using selector '${this.selector}', had no results for the collection.`),null)}privateGetDataFromItem(e){if(null==e)return console.log(`The data selector '${this.name}', using selector '${this.selector}', had no item to retrieve data from.`),null;if(this.inputType===InputType.Image)return e.src;if(this.inputType===InputType.Value)return e.value;if(this.inputType===InputType.Url)return e.href;let t=this.selector.indexOf("[itemprop=")>=0?e.content:""===this.attribute?e.innerHTML:e.dataset[this.attribute];if(this.inputType===InputType.Text)return t;if(this.inputType===InputType.Number){t=t.replace(",-","").replace(",",".");let e=t.match(/\d+\.\d+/);return null!=e?1===e.length?Number(e[0]):(console.log(`The data selector '${this.name}', using selector '${this.selector}', had multiple decimal values converted to a number.`),null):(e=t.match(/\d+/),null!=e?1===e.length?Number(e[0]):(console.log(`The data selector '${this.name}', using selector '${this.selector}', had multiple values converted to a number.`),null):(console.log(`The data selector '${this.name}', using selector '${this.selector}', had no value converted to a number.`),null))}}}class FixedDataSelector extends DataSelector{constructor(e,t){super(e,"","",!0),this.fixedValue=t}getData(e){return this.fixedValue}}class DataSchema{constructor(e,t,l,a=null,n=null,s=!1){this.name=e,this.itemContainerSelector=t,this.mandatory=l,this.dataSelectors=a,this.dataSchemas=n,this.isCollection=s}getData(e){if(!this.isCollection){const t=""===this.itemContainerSelector?e:e.querySelector(this.itemContainerSelector);return null==t?(console.log(`The data schema '${this.name}', using selector '${this.itemContainerSelector}', did not find an element.`),null):this._getDataFromItemContainer(t)}const t=e.querySelectorAll(this.itemContainerSelector);let l=[];return t.forEach((e=>{const t=this._getDataFromItemContainer(e);null!==t&&l.push(t)})),l.length>0?l:(console.log(`The data schema '${this.name}', using selector '${this.itemContainerSelector}', had no results for the collection.`),null)}_getDataFromItemContainer(e){let t={},l=!1;return null!==this.dataSelectors&&this.dataSelectors.forEach((a=>{const n=a.getData(e);null!==n?t[a.name]=n:a.mandatory&&(l=!0)})),l?(console.log(`The data schema '${this.name}', using selector '${this.itemContainerSelector}', missed mandatory data.`),null):(null!==this.dataSchemas&&this.dataSchemas.forEach((a=>{const n=a.getData(e);null!==n?t[a.name]=n:a.mandatory&&(l=!0)})),l?(console.log(`The data schema '${this.name}', using selector '${this.itemContainerSelector}', missed mandatory schema.`),null):t)}}